
func mul_delta returns f64
    arg y f64
    __bbae_temp_1 = mov 0.001000f64
    y2 = fmul y __bbae_temp_1
    return y2
endfunc
func main returns f64
    __bbae_temp_20 = mov <aggregate>
    __bbae_temp_18 = mov 0.000000f64
    __bbae_temp_16 = mov 0.000000f64
    __bbae_temp_14 = mov 0.000000f64
    __bbae_temp_12 = mov 0i64
    i = mov 1000000000i64
    y = mov 0.000000f64
    vel = mov 0.000000f64
    g = mov 9.800000f64
    goto grav i y vel g
block grav
    arg i i64
    arg y f64
    arg vel f64
    arg g f64
    mul_delta = symbol_lookup_unsized mul_delta
    __bbae_temp_13 = mov i
    __bbae_temp_15 = mov y
    __bbae_temp_17 = mov vel
    __bbae_temp_19 = mov g
    __bbae_temp_21 = mov mul_delta
    goto __bbae_temp_11_mul_delta g __bbae_temp_13 __bbae_temp_15 __bbae_temp_17 __bbae_temp_19 __bbae_temp_21
block __bbae_temp_11_mul_delta
    arg y f64
    arg __bbae_temp_12 i64
    arg __bbae_temp_14 f64
    arg __bbae_temp_16 f64
    arg __bbae_temp_18 f64
    arg __bbae_temp_20 iptr
    __bbae_temp_1 = mov 0.001000f64
    y2 = fmul y __bbae_temp_1
    goto __bbae_temp_5 y2 __bbae_temp_12 __bbae_temp_14 __bbae_temp_16 __bbae_temp_18 __bbae_temp_20
block __bbae_temp_5
    arg gd f64
    arg __bbae_temp_12 i64
    arg __bbae_temp_14 f64
    arg __bbae_temp_16 f64
    arg __bbae_temp_18 f64
    arg __bbae_temp_20 iptr
    mul_delta = mov __bbae_temp_20
    g = mov __bbae_temp_18
    vel = mov __bbae_temp_16
    y = mov __bbae_temp_14
    i = mov __bbae_temp_12
    __bbae_temp_2 = mov 0.500000f64
    gd2 = fmul gd __bbae_temp_2
    vel2 = fadd vel gd2
    __bbae_temp_3 = mov 0.001000f64
    vd = fmul vel2 __bbae_temp_3
    y2 = fadd y vd
    vel3 = fadd vel2 gd2
    i2 = sub i 1i64
    cmp = cmp_g i2 0i64
    if cmp goto grav i2 y2 vel3 g else exit y2
block exit
    arg y f64
    return y
endfunc